{"version":3,"sources":["api/baseurl.js","store/action/fileinfo.js","store/reduce/fileinfo.js","store/reduce/index.js","store/store.js","components/FilesList/index.js","components/upload/index.js","App.js","serviceWorker.js","index.js"],"names":["baseurl","deleteFIle","key","path","console","log","dispatch","fetch","type","payload","createDeleteFIleAction","getFileInfo","getState","a","url","resp","json","result","data","map","el","filekey","fileinfoReduce","state","action","filter","store","createStore","newState","fileinfo","applyMiddleware","thunk","logger","confirm","Modal","columns","title","dataIndex","render","text","sorter","b","date","tag","color","record","style","marginRight","onClick","icon","ExclamationCircleOutlined","content","onOk","onCancel","filename","then","res","blob","window","navigator","msSaveOrOpenBlob","msSaveBlob","document","createElement","body","appendChild","URL","createObjectURL","href","download","target","click","remove","revokeObjectURL","FileList","curKey","isLoading","this","props","setState","tip","spinning","dataSource","Component","hoc","connect","Dragger","Upload","name","multiple","director","showUploadList","info","status","file","fileList","message","success","error","UploadCom","className","InboxOutlined","App","Boolean","location","hostname","match","ReactDOM","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"8VAAaA,EAAO,4BCqBb,SAASC,EAAWC,EAAIC,GAE3B,OADAC,QAAQC,IAAIH,EAAIC,GACP,SAAUG,GACfC,MAAM,GAAD,OAAIP,EAAJ,4BAA+BG,EAA/B,gBAA2CD,IAChDI,EAXR,SAAgCJ,GAC5B,MAAO,CACHM,KAbqB,SAcrBC,QAASP,GAQAQ,CAAuBR,KAgBjC,SAASS,IAEZ,OADAP,QAAQC,KAAK,GACb,uCAAO,WAAOC,EAAUM,GAAjB,qBAAAC,EAAA,6DACGC,EADH,UACYd,EADZ,4BAEcO,MAAMO,GAFpB,cAECC,EAFD,gBAGgBA,EAAKC,OAHrB,OAGCC,EAHD,OAKHC,GADIA,EAAOD,EAAOC,MACNC,KAAI,SAAAC,GACZ,OAAO,eAAIA,EAAX,CAAclB,IAAIkB,EAAGC,aAEzBjB,QAAQC,IAAI,GACZC,EAnBG,CACHE,KA9BoB,OA+BpBC,QAiBiCS,IACjCd,QAAQC,IAAI,GAVT,4CAAP,qDAAM,G,aCxCH,SAASiB,IAAkC,IAAnBC,EAAkB,uDAAV,GAAGC,EAAO,uCAC7C,MDFuB,QCEpBA,EAAOhB,KACA,GAAN,mBAAWe,GAAX,CAAiBC,EAAOf,UDFH,WCGhBe,EAAOhB,KACLe,EAAME,QAAO,SAAAL,GAChB,OAAGA,EAAGlB,MAAQsB,EAAOf,WDJL,SCSfe,EAAOhB,KACLgB,EAAOf,QAEXc,ECfI,I,mCCGFG,EAAQC,aDHN,WAA4B,IAAnBD,EAAkB,uDAAV,GAAGF,EAAO,uCAChCI,EAAW,CACbC,SAASP,EAAeI,EAAMG,SAASL,IAE3C,OAAOI,ICD6BE,YAAgBC,IAAMC,MAC9D5B,QAAQC,IAAIqB,EAAMd,Y,ICKVqB,EAAYC,IAAZD,QAkCR,IAAME,EAAU,CACd,CACEC,MAAO,qBACPC,UAAW,WACXnC,IAAK,WACLoC,OAAQ,SAAAC,GAAI,OAAI,2BAAIA,KAEtB,CACEH,MAAO,2BACPC,UAAW,OACXnC,IAAK,QAEP,CACEkC,MAAO,2BACPC,UAAW,OACXnC,IAAK,OACLsC,OAAQ,SAAC3B,EAAG4B,GAEV,OAAO5B,EAAE6B,KAAMD,EAAEC,OAGrB,CACEN,MAAO,2BACPlC,IAAK,OACLmC,UAAW,OACXC,OAAQ,SAAAK,GAAG,OACT,8BAEM,kBAAC,IAAD,CAAKC,MAAM,WACRD,MAMb,CACEP,MAAO,eACPlC,IAAK,SACLoC,OAAQ,SAACC,EAAMM,GAEb,OACE,8BACE,uBAAGC,MAAO,CAAEC,YAAa,IACzBC,QAAS,WA3EnB,IAAqB9C,EAAIC,EAAJD,EA4EG2C,EAAO3C,IA5ENC,EA4EU0C,EAAO1C,KA1ExC8B,EAAQ,CACNG,MAAO,kFACPa,KAAM,kBAACC,EAAA,EAAD,MACNC,QAAS,wEACTC,KAJM,WAKJ1B,EAAMpB,SAASL,EAAWC,EAAIC,KAEhCkD,SAPM,iBAwEA,gBAKA,uBAAGL,QAAS,WAlEtB,IAAkB7C,EAAKmD,EAmEXlD,QAAQC,IAAI,gBACZD,QAAQC,IAAIwC,EAAO1C,MApEbA,EAqEG0C,EAAO1C,KArELmD,EAqEUT,EAAOS,SApEtClD,QAAQC,IAAI,kCACZE,MAAM,GAAD,OAAIP,EAAJ,0BAA6BG,IAAQoD,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAAQF,MAAK,SAAAE,GACnE,GAAIC,OAAOC,UAAUC,iBACjBD,UAAUE,WAAWJ,EAAMH,OACxB,CACH,IAAIzC,EAAIiD,SAASC,cAAc,KAC/BD,SAASE,KAAKC,YAAYpD,GAC1B,IAAIC,EAAM4C,OAAOQ,IAAIC,gBAAgBV,GACrC5C,EAAEuD,KAAOtD,EACTD,EAAEwD,SAAWf,EACbzC,EAAEyD,OAAO,SACTzD,EAAE0D,QACF1D,EAAE2D,SACFd,OAAOQ,IAAIO,gBAAgB3D,SAoDzB,oBAoBJ4D,E,2MACJnD,MAAQ,CACNL,KAAK,GACLyD,OAAO,EACPC,WAAU,G,mFAGVxE,QAAQC,IAAI,OACZwE,KAAKC,MAAMnE,cACZkE,KAAKE,SAAS,CACZH,WAAU,M,+BAIP,OACE,kBAAC,IAAD,CAAMI,IAAI,aACVC,SAAUJ,KAAKtD,MAAMqD,WAEnB,kBAAC,IAAD,CAAOzC,QAASA,EAChB+C,WAAYL,KAAKC,MAAMjD,gB,GAnBZsD,aA2CvB,I,EACeC,EADHC,aAjBZ,SAAyB9D,GACvB,MAAO,CACLM,SAASN,EAAMM,aAInB,SAA4BvB,GAC1B,MAAO,CACLK,YADK,WAEHL,EAASK,MAEXV,WAJK,SAIMC,EAAIC,GACbG,EAASL,EAAWC,EAAIC,QAMfiF,CAAIV,G,mCCpJXY,EAAYC,IAAZD,QAEFR,GAAK,GACTU,KAAM,OACNC,UAAU,EACVC,UAAS,EACTC,gBAAe,EACfnE,OAAO,GAAD,OAAKxB,EAAL,YALG,qBAMJ,YANI,mCAOA4F,GAAO,IACNC,EAAWD,EAAKE,KAAhBD,OACO,cAAXA,GACFzF,QAAQC,IAAIuF,EAAKE,KAAMF,EAAKG,UAEf,SAAXF,GACFG,IAAQC,QAAR,UAAmBL,EAAKE,KAAKN,KAA7B,iDACA9D,EAAMpB,SAASK,MACK,UAAXkF,GACTG,IAAQE,MAAR,UAAiBN,EAAKE,KAAKN,KAA3B,8CAhBK,GAqBUW,E,iLAEb,OACI,kBAACb,EAAYR,EACb,uBAAGsB,UAAU,wBACX,kBAACC,EAAA,EAAD,OAEF,uBAAGD,UAAU,mBAAb,oGACA,uBAAGA,UAAU,mBAAb,+G,GAR2BjB,aCxBlBmB,E,iLAGjB,OACE,kBAAC,IAAD,CAAU5E,MAAOA,GACf,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANyByD,aCMboB,QACW,cAA7B7C,OAAO8C,SAASC,UAEe,UAA7B/C,OAAO8C,SAASC,UAEhB/C,OAAO8C,SAASC,SAASC,MACvB,2DCZNC,IAASrE,OAAO,kBAAC,EAAD,MAASwB,SAAS8C,eAAe,SD6H3C,kBAAmBjD,WACrBA,UAAUkD,cAAcC,MACrBvD,MAAK,SAAAwD,GACJA,EAAaC,gBAEdC,OAAM,SAAAf,GACL9F,QAAQ8F,MAAMA,EAAMF,c","file":"static/js/main.c539f10b.chunk.js","sourcesContent":["export const baseurl = `http://47.98.229.148:2001`","import {baseurl} from '../../api/baseurl'\n// 增加\nexport const fileAddType = \"add\";\nexport const fileRduceType = \"reduce\";\nexport const fileDataType = \"data\";\n\n// [{}{}{}]\nfunction createAddFileAction(fileinfo) {\n    return {\n        type: fileAddType,\n        payload: fileinfo\n    }\n}\n\nfunction createDeleteFIleAction(key) {\n    return {\n        type: fileRduceType,\n        payload: key\n    }\n}\n\nexport function deleteFIle(key,path) {\n    console.log(key,path)\n    return   function (dispatch) {\n        fetch(`${baseurl}/deletefile?path=${path}&key=${key}`);\n        dispatch(createDeleteFIleAction(key));\n    }\n}\n\n\n\n\nfunction createGetFileInfoAction(fileinfoArr) {\n    return {\n        type: fileDataType,\n        payload: fileinfoArr\n    }\n}\n// 副作用函数\n\n\nexport function getFileInfo() {\n    console.log(-1)\n    return async (dispatch, getState) => {\n        const url = `${baseurl}/getallfileinfo`;\n        let resp = await fetch(url)\n        let result = await resp.json();\n        let data = result.data;\n        data = data.map(el=>{\n            return {...el,key:el.filekey}\n        })\n        console.log(0)\n        dispatch(createGetFileInfoAction(data));\n        console.log(1)\n    }\n}","// [{}{}{}]\nimport {fileAddType,fileRduceType,fileDataType} from '../action/fileinfo'\n\nexport function fileinfoReduce(state = [],action){\n    if(action.type === fileAddType ){\n        return [...state,action.payload]\n    }else if(action.type === fileRduceType){\n        return state.filter(el=>{\n            if(el.key !== action.payload){\n                return true;\n            }\n            return false;\n        })\n    }else if(action.type === fileDataType){\n        return action.payload;\n    }\n    return state;\n}","import {fileinfoReduce} from './fileinfo';\nexport default function(store = {},action){\n    const newState = {\n        fileinfo:fileinfoReduce(store.fileinfo,action)\n    }\n    return newState;\n}","import reduce from './reduce';\nimport {createStore,applyMiddleware} from \"redux\"\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk'\nexport const store = createStore(reduce,applyMiddleware(thunk,logger));\nconsole.log(store.getState())","import { Table, Tag } from 'antd';\nimport React, { Component } from 'react'\nimport \"antd/dist/antd.css\"\nimport { Modal, Button , Spin} from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport {connect} from 'react-redux'\nimport { fileDataType } from '../../store/action/fileinfo';\nimport {getFileInfo,deleteFIle} from '../../store/action/fileinfo'\nimport {store} from '../../store/store'\nimport {baseurl} from '../../api/baseurl'\nconst { confirm } = Modal;\n\nfunction showConfirm(key,path) {\n  // console.log(curkey)\n  confirm({\n    title: '你确定你想要删除这个文件吗?',\n    icon: <ExclamationCircleOutlined />,\n    content: 'When clicked the OK button, this dialog will be closed after 1 second',\n    onOk() {\n      store.dispatch(deleteFIle(key,path));\n    },\n    onCancel() {},\n  });\n}\n\nfunction download(path,filename){\n  console.log(\"我要下载咯\")\n  fetch(`${baseurl}/download?path=${path}`).then(res=>res.blob()).then(blob=>{\n    if (window.navigator.msSaveOrOpenBlob) {\n        navigator.msSaveBlob(blob, filename);  //兼容ie10\n    } else {\n        var a = document.createElement('a');\n        document.body.appendChild(a) //兼容火狐，将a标签添加到body当中\n        var url = window.URL.createObjectURL(blob);   // 获取 blob 本地文件连接 (blob 为纯二进制对象，不能够直接保存到磁盘上)\n        a.href = url;\n        a.download = filename;\n        a.target='_blank'  // a标签增加target属性\n        a.click();\n        a.remove()  //移除a标签\n        window.URL.revokeObjectURL(url);\n    }\n  });\n}\n\nconst columns = [\n  {\n    title: '文件名',\n    dataIndex: 'filename',\n    key: 'filename',\n    render: text => <a>{text}</a>,\n  },\n  {\n    title: '文件大小',\n    dataIndex: 'size',\n    key: 'size',\n  },\n  {\n    title: '上传日期',\n    dataIndex: 'date',\n    key: 'date',\n    sorter: (a, b) => {\n      // console.log(a,b);\n      return a.date- b.date;\n    }\n  },\n  {\n    title: '文件类型',\n    key: 'tags',\n    dataIndex: 'tags',\n    render: tag => (\n      <span>\n        {\n            <Tag color=\"volcano\">\n              {tag}\n            </Tag>\n        }\n      </span>\n    ),\n  },\n  {\n    title: '操作',\n    key: 'action',\n    render: (text, record) => {\n      // console.log(text,record)\n      return (\n        <span>\n          <a style={{ marginRight: 16 }}\n          onClick={()=>{\n            showConfirm(record.key,record.path);\n          }}\n          >删除</a>\n          <a onClick={()=>{\n            console.log(\"下载\")\n            console.log(record.path)\n            download(record.path,record.filename);\n          }}>下载</a>\n        </span>\n      )\n    },\n  },\n];\n/**\n * filename  文件名称\n * size  文件大小\n * date 上传日期\n * tags 文件类型\n * action 操作\n */\n\n\n\nclass FileList extends Component {\n  state = {\n    data:[],\n    curKey:0,\n    isLoading:true\n  }\n  componentDidMount(){\n    console.log(\"000\")\n    this.props.getFileInfo();\n   this.setState({\n     isLoading:false\n   })\n  }\n    render() {\n        return (\n          <Spin tip=\"Loading...\"\n          spinning={this.state.isLoading}\n          >\n            <Table columns={columns} \n            dataSource={this.props.fileinfo} \n            />\n          </Spin>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n  return {\n    fileinfo:state.fileinfo\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    getFileInfo(){\n      dispatch(getFileInfo())\n    },\n    deleteFIle(key,path){\n      dispatch(deleteFIle(key,path))\n    }\n  }\n}\n\nconst hoc = connect(mapStateToProps,mapDispatchToProps);\nexport default hoc(FileList);\n\n","import { Upload, message } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport React, { Component } from 'react'\nimport {store} from '../../store/store'\nimport {getFileInfo} from '../../store/action/fileinfo'\nimport {baseurl} from '../../api/baseurl'\nconst { Dragger } = Upload;\n\nconst props = {\n  name: 'file',\n  multiple: true,\n  director:true,\n  showUploadList:true,//是否显示上传文件列表\n  action: `${baseurl}/upload`,//请求接口地址\n  name:\"fileName\",//表单域名称(与后台配合)\n  onChange(info) {\n    const { status } = info.file;\n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (status === 'done') {\n      message.success(`${info.file.name} 文件上传成功！.`);\n      store.dispatch(getFileInfo());\n    } else if (status === 'error') {\n      message.error(`${info.file.name} 文件上传失败.`);\n    }\n    // console.log(info)\n  },\n};\nexport default class UploadCom extends Component {\n    render() {\n        return (\n            <Dragger {...props}>\n            <p className=\"ant-upload-drag-icon\">\n              <InboxOutlined />\n            </p>\n            <p className=\"ant-upload-text\">点击上传或将文件拖放到该区域上传</p>\n            <p className=\"ant-upload-hint\">\n              Support for a single or bulk upload. Strictly prohibit from uploading company data or other\n              band files\n            </p>\n          </Dragger>\n        )\n    }\n}\n\n\n\n\n","import React, { Component } from 'react'\nimport FIleList from './components/FilesList'\nimport Upload from './components/upload'\nimport {store} from './store/store'\nimport './store/store'\nimport {Provider} from 'react-redux'\nexport default class App extends Component {\n  render() {\n    \n    return (\n      <Provider store={store}>\n        <Upload></Upload>\n        <FIleList/>\n      </Provider>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}